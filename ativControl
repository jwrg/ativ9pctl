#!/bin/bash

# This script is a wrapper for some functionality on Samsung Ativ Book 9 Plus
# laptops, with the intention that these functions be mapped to the fn-keys
# using a window manager (in my case, dwm).  It is provided as-is; use at your
# own risk.
#
# For reference, the function key x11 hex reference will be given with the
# corresponding function.

# Globals

ATIV_USER=downfall
ATIV_BKLT=/sys/class/backlight/intel_backlight/

OPTIND=1	# Reset in case getopts has been invoked previously

# Logging function
#
# Output something to console iff the verbose flag is set

VERBOSE=0
log () { 
  if [[ $VERBOSE -eq 1 ]]; then 
    echo "$@" 
  fi 
}

# Put the system into suspend and lock the screen
#
# This is a simple function that does two things:
#
# 1) suspends the system in the background, and
# 2) locks the screen
#
# For information on making pm-suspend work, see the following URL:
# https://wiki.gentoo.org/wiki/Suspend_and_hibernate
#
# This can be mapped to the launch key (Fn + F1)
# Launch key hex reference: 0x1008ff41

laptop_suspend () {
  pm-suspend &
  su -c slock -l $ATIV_USER
}

# Control the brightness of the screen backlight
#
# This queries for the backlight brightness and max brightness in /sys/, and
# expects a parameter from the command line, which is how much you want to
# brighten the screen (negative values darken the backlight).
#
# Brightness up key hex reference: 0x1008ff02
# Brightness down key hex reference: 0x1008ff03
#
# NB script needs root/sudo elevation for this to work

brightness () {
  brt_target="${ATIV_BKLT}brightness"
  max_target="${ATIV_BKLT}max_brightness"

  brightness=$(<$brt_target)
  new_brightness=$(($brightness+$1))
  max_brightness=$(<$max_target)
  log "current brightness: $brightness, incrementing by $1"

  if [ $new_brightness -gt $max_brightness ]; then
    log "brightness set to maximum value!"
    echo $max_brightness > $brt_target
  elif [ $new_brightness -lt 0 ]; then
    log "brightness set to minimum value!"
    echo 1 > $brt_target
  else
    log "new brightness: $new_brightness"
    echo $new_brightness > $brt_target
  fi
}

while getopts "h?vsb:" opt; do
  case "$opt" in
  h|\?)
    show_help
    exit 0
    ;;
  v) VERBOSE=1 ;;
  s) laptop_suspend ;;
  b) brightness $OPTARG ;;
  esac
done

shift $((OPTIND-1))

[ "$1" = "--" ] && shift

# EOF
